@*<div class="datadrager-card">*@
	@foreach (Tool item in Curriculum.ListTools)
	{
		<fieldset>
			<legend><span class="legend-span">&nbsp;Tool Card&nbsp;</span></legend>
			<table>
				<tr>
					<td>&nbsp;&nbsp;Experience level</td>
					<td><input @bind="item.ExperienceLevel" /></td>
					<td>
						<button @onclick="() => Delete(item)">
							<img src="minus-circle.png" alt="sss" />
						</button>
					</td>
				</tr>
			</table>
		</fieldset>
	}

	<div>
		<span style="float:right">
			<button @onclick="Add"><img src="plus-circle.png" alt="sss" /></button>
		</span>
	</div>
@*</div>*@


@code 
{
	/// parameter: geeft object Curriculum dat in parent werd aangemaakt door aan child EditEducation  
	[CascadingParameter]
	public Curriculum Curriculum { get; set; }

	/// idem voor XMLData
	[CascadingParameter]
	public XMLDataCreate XmlData { get; set; }

	// wordt aangeroepen als user op png met de + klikt (toevoegen)
	// toevoeging wordt in xml file weggeschreven
	void Add()
	{
	Tool toool = new Tool();
		toool.Id = Curriculum.ListTools.Count() + 1;
	Curriculum.ListTools.Add(toool);
	XmlData.Save(Curriculum);
	}

	// idem voor het verwijdering 
	void Delete(Tool weg)
	{
	Curriculum.ListTools.Remove(weg);
	XmlData.Save(Curriculum);
	}
}